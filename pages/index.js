import * as React from 'react';
import Head from 'next/head';
import NavVarIndex from '@/components/navVarIndex';
import CardUsers from '@/components/cardUsers';
import { Grid } from '@mui/material';
import { Container } from '@mui/system';
import apiClient from '@/apiClient';
import AddUser from '@/components/addUser';
import Swal from 'sweetalert2';
export default function Index() {
  const [users, setUsers] = React.useState([]);

  React.useEffect(() => {
    refresh();
  }, []);

  const refresh = () => {
    apiClient.get('/usuarios')
    .then(response =>{
      setUsers(response.data || []);
    })
    .catch(error => {
      console.log(error);
    })
  }

  React.useEffect (() => {
    //ir por la información del back
    apiClient.get('/usuarios')
    .then(response => {
      setUsers(response.data || [])
    })
    .catch(error => {
      console.log(error);
    });
  }, []);

  const deleteUser = (id) => {
    console.log(id);
    Swal.fire({
      title: '¿Estás Seguro de eliminar?',
      text: "No sé podrán recuperar los datos",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      cancelButtonText: "Cancelar",
      confirmButtonText: 'si, eliminar'
    }).then((result) => {
      if (result.isConfirmed) {
        apiClient.delete(`/usuarios?id=${id}`)
        .then(response =>{
          console.log(response.data);
          Swal.fire({
            position: 'center',
            icon: 'success',
            text: response.data.message,
          });
          refresh()
        })
        .catch(error => {
          console.log(error);
        })
      }
    })
  }

  const handleSave = (data, index) => {
    console.log(data);
    console.log(index);
    apiClient.put(`usuarios?id=${data.id}`, data)
      .then(response => {
        Swal.fire({
          position: 'center',
          icon: 'success',
          text: response.data.message,
          confirmButtonText: "Aceptar"
        }).then((result) =>{
          if(result.isConfirmed){
            const usersCopy = [...users];
            usersCopy.splice(index, 1, data)
            setUsers(usersCopy);
          }
        })
      })

  }

  const renderUsers = () => {
    return users.map((user, index) => (
      <Grid item xs={12} md={4} xl={2} key={user.id}>
        <CardUsers
          index = {index}
          user = {user}
          onDelete = {deleteUser}
          onSave = {handleSave}
        />
      </Grid>
    ))
  }
  return (
    <>
      <Head>
        <title>SIRTA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous"/>
      </Head>
      <main>
        <NavVarIndex> 
        </NavVarIndex>
        <AddUser
          recargar={refresh}
        />
        <Container>
          <Grid container spacing={2} sx={{marginTop: 1}} >
            {renderUsers()}
          </Grid>
        </Container>
      </main>
    </>
  )
}
