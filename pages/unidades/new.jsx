import Head from "next/head";
import { Button, Container, Grid, Paper, TextField } from "@mui/material";
import { useForm } from "react-hook-form";
import apiClient from "@/apiClient";


export default function NewCustomer() {

    const { register, handleSubmit, watch, formState: { errors }, setError } = useForm();
    const onSubmit = (data) => {
        console.log(data);

        //enviar datos al backend
        apiClient.post('/unidades', data)
            .then((response) => {
                console.log(response);
                alert(response.data.message)
            })
            .catch((error) => {
                // alert(error.response.data.message)

                if (error.response.data.errors) {
                    error.response.data.errors.forEach((errorItem) => {
                        setError(errorItem.field, {
                            //error: true,
                            type: "validation",
                            message: errorItem.error
                        });
                    })
                }
            });
    };

    return (
        <>

            <Head>
                <title>Agregar cliente</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Paper>
                <Container component={"form"} onSubmit={handleSubmit(onSubmit)}>
                    <Grid container spacing={2} sx={{ marginBottom: 4 }}>

                        <Grid item xs={12} md={6}>
                            <TextField
                                label="Número de la unidad" fullWidth variant="standard"
                                id="numunidad"
                                error={!!errors.numunidad}
                                helperText={errors.numunidad?.message}
                                {...register('numunidad',
                                    {
                                        required: 'Este campo es obligatorio',
                                        pattern: {
                                            value: /^[0-9]+$/i,
                                            message: 'No es un número válido.'
                                        }
                                    }
                                )
                                }
                            />
                        </Grid>

                        <Grid item xs={12} md={6}>
                            <TextField
                                label="Placas" fullWidth variant="standard"
                                id="placas"
                                error={!!errors.placas}
                                helperText={errors.placas?.message}
                                {...register('placas',
                                    {
                                        required: 'Este campo es obligatorio',
                                        pattern: {
                                            value: /^[A-Z]{3}[-][0-9]{3}/,
                                            message: 'No es una placa válida.'
                                        }
                                    }
                                )
                                }
                            />
                        </Grid>

                        <Grid item xs={12} md={6}>
                            <TextField
                                label="Nombre del chofer" fullWidth variant="standard"
                                id="name"
                                error={!!errors.name}
                                helperText={errors.name?.message}
                                {...register('name',
                                    {
                                        required: 'Este campo es obligatorio',
                                        pattern: {
                                            value: /^[A-Za-zÁÉÍÓÚáéíóúñÑ ]+$/g,
                                            message: 'No es un nombre válido.'
                                        }
                                    }
                                )
                                }
                            />
                        </Grid>

                        <Grid item xs={12} md={6}>
                            <TextField
                                label="Teléfono" fullWidth variant="standard"
                                id="phone"
                                error={!!errors.phone}
                                helperText={errors.phone?.message}
                                {...register('phone',
                                    {
                                        required: 'Este campo es obligatorio',
                                        pattern: {
                                            value: /^[0-9]{2}[0-9]{8}$/,
                                            message: 'No es un teléfono válido.'
                                        }
                                    }
                                )
                                }
                            />
                        </Grid>

                        <Grid item xs={12} md={6}>
                            <TextField
                                label="Vigencia de licencia" fullWidth variant="standard"
                                id="vigencia licencia"
                                error={!!errors.vigencialicencia}
                                helperText={errors.vigencialicencia?.message}
                                {...register('vigencialicencia',
                                    {
                                        required: 'Este campo es obligatorio',
                                        pattern: {
                                            value: /^[0-9]{4}$/,
                                            message: 'No es un año válido.'
                                        }
                                    }
                                )
                                }
                            />
                        </Grid>

                    </Grid>

                    <Grid item xs={12} sx={{ textAlign: 'center' }}>
                            <Button type="submit" variant="contained">Guardar</Button>
                        </Grid>
                </Container>
            </Paper>
        </>

    );
}